<? $title = 'Циклы';
	include 'functions.php';
	include 'header.php';
?>
    <header><?= $title; ?></header>
    <div class="container">
        <h3>Цикл — это итерация кода, которая может быть неограниченной или конечной. Цикл может иметь начальное и
            конечное условие. В PHP существует четыре типа циклов: while, do-while, for и foreach.</h3>
        <h4>Цикл for:</h4>
        <pre>for ($i= инициализация переменной счетчика; $i>= какое-то условие; прирост переменной счетчика){
     //код
    }


            
            
            
            
for ($i=0; $i<=10;$i++){
     //код
}

$array=[1,2,2,3,3,4];

for ($i=0; $i<=count($array);$i++){
// тут count($array) - вернет количечтво элементов в массиве -6
     esho $array[$i];
}



        </pre>


        <h4>Цикл foreach:</h4>
        <ol>
            <li><b>$array</b> - массив по которому проходим</li>
            <li><b>as</b> - означает как, т.е мы проходим по массиву и просим называть ключ как $key, значение как $item
            </li>
            <li><b>$key, $item</b> это временные переменные, область видимости которых только тело цикла,
                названия
                переменных могут быть любые
            </li>
            <li><b>ВАЖНО!!</b> В этом цикле что бы переписать значение массива требуется обращаться не к $item, а к
                <b>$array[$key]</b>
            </li>
            <li>снипет для нашей IDE: fore - без ключа , forek-с ключом</li>

        </ol>

        <pre>foreach (массив as ключ => значение) {
//код
}

foreach ($array as $key => $item) {
   echo "Ключ:,$key значение:$item"
}

если не нужен ключ, то короткая запись

foreach ($array as  $item) {
   echo "значение:$item"
}


        </pre>

        <h4>Цикл while:</h4>
        <ol>
            <li> While – цикл с предусловием($n <= 5), т.е. если перед началом итерации условие выполняется, то цикл
                продолжает свою работу.
            </li>
            <li><b>ВАЖНО!!</b> Объявить переменую для счетчика необходимо до цикла($n= 0;) иначе $n будет не определена
            </li>
            <li>$n++; будет увеличивать на 1 каждую итерацию и когда значение достигнет 5 цикл остановится</li>

        </ol>
        <pre>$n     = 0;
while ($n <= 5) {
	echo $n;
	$n++;
}

Обратите внимание что функция count возвращает количество элементов 6,
а счет массива начинается с 0, сооответсвенно $array[6] не существует,
поэтому $x < count($array)? f yt $x <= count($array)

$array = [1, 2, 2, 3, 3, 4];
$x= 0;
while ($n < count($array)) {
	echo $array[$x];
	$x++;
}
        </pre>


        <h4>Цикл do-while:</h4>
        <ol>
            <li> Do-while – цикл с постусловием
                В отличии от while этот цикл проверяет выполнения условия после каждой итерации. Do-while не имеет
                альтернативного синтаксиса.
            </li>
            <li>Используется только т гда , когда нам необходимо выполнить одну итерацию в любом случае независимо от
                условия
            </li>
            <li><b>ВАЖНО!!</b> Объявить переменую для счетчика необходимо до цикла($n= 0;) иначе $n будет не определена
            </li>
            <li>$n++; будет увеличивать на 1 каждую итерацию и когда значение достигнет 5 цикл остановится</li>

        </ol>
        <pre>$n = 0;
do {
	echo $n;
	$n++;
} while ($n <= 5);

Обратите внимание что функция count возвращает количество элементов 6,
а счет массива начинается с 0, сооответсвенно $array[6] не существует,
поэтому $n < count($array)? f yt $n <= count($array)

$array = [1, 2, 2, 3, 3, 4];
while ($n < count($array)) {
	echo $array[$n];
	$n++;
}
        </pre>

        <h4>Управление циклами </h4>
        <ol>
            <li>Вызов break или break 2 в цикле останавливает его.</li>
            <li><b>сontinue</b> - Используется для пропуска итерации.</li>
        </ol>
        <pre>
for ($n = 0; $n <= 5; $n++) {
	if ($n == 3) {
		break;
	}
	echo $n;
}

Для вложенных циклов используется break 2 и т.д.

for ($n = 0; $n <= 5; $n++) {
	for ($k = 0; $k <= 5; $k++) {
		if ($n == 2 && $k == 2) {
			// Остановить оба цикла
			break 2;
		}
		echo $k;
	}
}

когда будет 3 то код не выведится

for ($n = 0; $n <= 5; $n++) {
	if ($n == 3) {
		continue;
	}
	echo $n;
}

        </pre>

    </div>

<?
	$array = [1, 2, 2, 3, 3, 4];

	for ($i = 0; $i <= count($array); $i++) {
		// тут count($array) - вернет количечтво элементов в массиве -6
		//echo $array[$i] . PHP_EOL;
	}

	$n = 0;
	while ($n <= 5) {
		if ($n == 3) {
			break;
		}
		echo $n;
		$n++;
	}
	echo '<br>';
	$x = 15;
	do {
		echo $x;
		$x++;
	} while ($x <= 5);
	echo '<br>';

	$product = [
		[
			"name"  => "card1",
			"price" => 1003,
		],
		[
			"price" => 1002,
			'date'  => '2022-12-07 23:10',
			"name"  => "card2",
		],
		[
			"name"  => "card3",
			"price" => 1001,
		],
	];

	foreach ($product as $index => $item) {
		echo "Ключ:,$index значение:" . $item['name'] . '  ' . $item['price'] . " руб.<br>";
	}
	echo '<br>';
	foreach ($product as $item) {
		foreach ($item as $index => $card) {
			$product[0]['name'] = 2222;

			echo "Ключ:$index значение:$card<br>";
		}
		echo '<br>';
	}


?>


?>


<? include 'footer.php' ?>